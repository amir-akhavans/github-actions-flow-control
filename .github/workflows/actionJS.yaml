name: JS Project
on:
  push:
    branches:
      - main
      - dev
env:
  MONGODB_DB_NAME: prod
jobs:
  test:
    environment: testing
    env:
      MONGODB_CLUSTER_ADDRESS: cluster0.15pwqcc.mongodb.net
      MONGODB_DB_NAME: ${{ secrets.MONGODB_DB_NAME }}
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME}}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD}}
      PORT: 3000
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules - ${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: List Code
        run: npm run list

      - name: Run Server
        run: npm start & npx wait-on http://127.0.0.1:$PORT

      - name: Test Code
        run: npm run test

      # - name: Output Information
      # run: echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules - ${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build Websie
        run: npm run build

      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: My-Artifact
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: My-Artifact
          # path:

      - name: Output Contents
        run: ls

      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"

      - name: Deploy
        run: echo "Deployin ....."
